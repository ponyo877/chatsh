// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file chatsh.proto (package fs, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CheckDirectoryExistsRequest, CheckDirectoryExistsResponse, ClientMessage, CopyPathRequest, CopyPathResponse, CreateDirectoryRequest, CreateDirectoryResponse, CreateRoomRequest, CreateRoomResponse, DeletePathRequest, DeletePathResponse, GetConfigRequest, GetConfigResponse, ListMessagesRequest, ListMessagesResponse, ListNodesRequest, ListNodesResponse, MovePathRequest, MovePathResponse, SearchMessageRequest, SearchMessageResponse, ServerMessage, SetConfigRequest, SetConfigResponse, WriteMessageRequest, WriteMessageResponse } from "./chatsh_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service fs.ChatshService
 */
export const ChatshService = {
  typeName: "fs.ChatshService",
  methods: {
    /**
     * @generated from rpc fs.ChatshService.CheckDirectoryExists
     */
    checkDirectoryExists: {
      name: "CheckDirectoryExists",
      I: CheckDirectoryExistsRequest,
      O: CheckDirectoryExistsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.GetConfig
     */
    getConfig: {
      name: "GetConfig",
      I: GetConfigRequest,
      O: GetConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.SetConfig
     */
    setConfig: {
      name: "SetConfig",
      I: SetConfigRequest,
      O: SetConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.CreateRoom
     */
    createRoom: {
      name: "CreateRoom",
      I: CreateRoomRequest,
      O: CreateRoomResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.CreateDirectory
     */
    createDirectory: {
      name: "CreateDirectory",
      I: CreateDirectoryRequest,
      O: CreateDirectoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.DeletePath
     */
    deletePath: {
      name: "DeletePath",
      I: DeletePathRequest,
      O: DeletePathResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.CopyPath
     */
    copyPath: {
      name: "CopyPath",
      I: CopyPathRequest,
      O: CopyPathResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.MovePath
     */
    movePath: {
      name: "MovePath",
      I: MovePathRequest,
      O: MovePathResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.ListNodes
     */
    listNodes: {
      name: "ListNodes",
      I: ListNodesRequest,
      O: ListNodesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.StreamMessage
     */
    streamMessage: {
      name: "StreamMessage",
      I: ClientMessage,
      O: ServerMessage,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     * @generated from rpc fs.ChatshService.SearchMessage
     */
    searchMessage: {
      name: "SearchMessage",
      I: SearchMessageRequest,
      O: SearchMessageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.WriteMessage
     */
    writeMessage: {
      name: "WriteMessage",
      I: WriteMessageRequest,
      O: WriteMessageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc fs.ChatshService.ListMessages
     */
    listMessages: {
      name: "ListMessages",
      I: ListMessagesRequest,
      O: ListMessagesResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

